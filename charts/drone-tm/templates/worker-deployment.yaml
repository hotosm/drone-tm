{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "drone-tm.worker.fullname" . }}
  labels:
    {{- include "drone-tm.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      {{- include "drone-tm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "drone-tm.labels" . | nindent 8 }}
        app.kubernetes.io/component: worker
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "drone-tm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          command: ["arq", "app.arq.tasks.WorkerSettings"]
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          envFrom:
            {{- toYaml .Values.worker.extraEnvFrom | nindent 12 }}
          env:
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_HOST
              value: {{ include "drone-tm.fullname" . }}-postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            {{- end }}
            {{- if .Values.minio.enabled }}
            - name: S3_ENDPOINT
              value: "http://{{ include "drone-tm.fullname" . }}-minio:9000"
            - name: S3_ACCESS_KEY
              value: {{ .Values.minio.auth.rootUser | quote }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ include "drone-tm.fullname" . }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.worker.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.worker.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: frontend-html
              mountPath: /project/src/backend/frontend_html
      volumes:
        - name: frontend-html
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
