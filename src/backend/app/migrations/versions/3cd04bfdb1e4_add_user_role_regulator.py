"""add user role regulator

Revision ID: 3cd04bfdb1e4
Revises: 162edb7e3cc4
Create Date: 2024-11-22 04:29:30.071824

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


new_userrole_enum = sa.Enum(
    "PROJECT_CREATOR", "DRONE_PILOT", "REGULATOR", name="userrole"
)

old_userrole_enum = sa.Enum("PROJECT_CREATOR", "DRONE_PILOT", name="userrole")

# revision identifiers, used by Alembic.
revision: str = "3cd04bfdb1e4"
down_revision: Union[str, None] = "162edb7e3cc4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE userrole ADD VALUE 'REGULATOR'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE userrole RENAME TO userrole_old")
    op.execute("CREATE TYPE userrole AS ENUM('PROJECT_CREATOR', 'DRONE_PILOT')")
    ## remove row containing regulator
    op.execute("""
        UPDATE user_profile
        SET role = array_remove(role, 'REGULATOR')
        WHERE 'REGULATOR' = ANY(role)
    """)

    op.execute("""
        ALTER TABLE user_profile
        ALTER COLUMN role
        TYPE userrole[]
        USING role::text[]::userrole[]
    """)

    op.execute("DROP TYPE userrole_old")
    # ### end Alembic commands ###
