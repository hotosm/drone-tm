"""add regulators approval and comment

Revision ID: 162edb7e3cc4
Revises: 4ea77c60b715
Create Date: 2024-11-22 04:21:04.322488

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "162edb7e3cc4"
down_revision: Union[str, None] = "4ea77c60b715"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

regulator_approval_status_enum = sa.Enum(
    "PENDING", "APPROVED", "REJECTED", name="regulatorapprovalstatus"
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    regulator_approval_status_enum.create(op.get_bind())
    op.add_column(
        "projects",
        sa.Column("requires_approval_from_regulator", sa.Boolean(), nullable=True),
    )
    op.execute("""
        UPDATE projects
        SET requires_approval_from_regulator = FALSE
        WHERE requires_approval_from_regulator IS NULL
    """)
    op.add_column(
        "projects", sa.Column("regulator_emails", sa.ARRAY(sa.String()), nullable=True)
    )
    op.add_column(
        "projects",
        sa.Column(
            "regulator_approval_status",
            sa.Enum("PENDING", "APPROVED", "REJECTED", name="regulatorapprovalstatus"),
            nullable=True,
        ),
    )
    op.add_column(
        "projects", sa.Column("regulator_comment", sa.String(), nullable=True)
    )
    op.add_column(
        "projects", sa.Column("commenting_regulator_id", sa.String(), nullable=True)
    )
    op.create_foreign_key(
        "fk_projects_commenting_regulator_id",
        "projects",
        "users",
        ["commenting_regulator_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_projects_commenting_regulator_id", "projects", type_="foreignkey"
    )
    op.drop_column("projects", "commenting_regulator_id")
    op.drop_column("projects", "regulator_comment")
    op.drop_column("projects", "regulator_approval_status")
    op.drop_column("projects", "regulator_emails")
    op.drop_column("projects", "requires_approval_from_regulator")
    # ### end Alembic commands ###
    regulator_approval_status_enum.drop(op.get_bind())
